{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.constant.ts","./src/app/app.module.ts","./src/app/details/citylist/citylist.component.ts","./src/app/details/citylist/citylist.component.html","./src/app/details/weatherdetails/weatherdetails.component.ts","./src/app/details/weatherdetails/weatherdetails.component.html","./src/app/shared/city.ts","./src/app/shared/luxon-format.pipe.ts","./src/app/shared/shared-service.ts","./src/app/shared/weather-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {WeatherdetailsComponent} from './details/weatherdetails/weatherdetails.component';\nimport { CitylistComponent} from './details/citylist/citylist.component';\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n\n { path: 'weatherDetails/:id',\n  component: WeatherdetailsComponent},\n  {path: 'home',\n  component: CitylistComponent}\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    useHash: true,\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  \n}","\n<!-- Toolbar -->\n<div class=\"toolbar\" role=\"banner\">\n  <a [routerLink]=\"'/home'\" class=\"nounderline\"><img\n    width=\"40\"\n    alt=\"Weather Logo\"\n    src=\"../assets/images/Logo.png\">\n  <span>Weather Data</span></a>\n</div>\n\n<div class=\"content\" role=\"main\">\n  <router-outlet></router-outlet>\n</div>\n\n","export class AppConstants {\r\n\r\npublic apikey: string = '3d8b309701a13f65b660fa2c64cdc517';\r\npublic api: string = 'http://api.openweathermap.org/data/2.5/';\r\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {WeatherServiceService } from './shared/weather-service.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppConstants } from './app.constant';\nimport { WeatherdetailsComponent } from './details/weatherdetails/weatherdetails.component';\nimport { CitylistComponent } from './details/citylist/citylist.component';\nimport {SharedService} from './shared/shared-service';\nimport { LuxonFormatPipe } from '../app/shared/luxon-format.pipe';\nimport { PathLocationStrategy,LocationStrategy } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherdetailsComponent,\n    CitylistComponent,LuxonFormatPipe ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  exports:[LuxonFormatPipe],\n  providers: [WeatherServiceService,AppConstants,{ provide: SharedService, useClass: SharedService },\n  { provide: LocationStrategy, useClass: PathLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {WeatherServiceService} from '../../shared/weather-service.service';\nimport {AppConstants} from '../../app.constant';\nimport {City} from '../../shared/city';\nimport { Router } from '@angular/router';\nimport {SharedService} from '../../shared/shared-service';\nimport { DateTime } from 'luxon';\n\n@Component({\n  selector: 'app-citylist',\n  templateUrl: './citylist.component.html',\n  styleUrls: ['./citylist.component.scss']\n})\nexport class CitylistComponent implements OnInit {\n\n  lat = 40.4637;\n  lang = 3.7492;\n  count = 6;\n  apiUrl: string;\n  cities :any;\n  cityList: Array<City> = [];\n\n  constructor(private weatherService: WeatherServiceService,private appConstants: AppConstants,private _router: Router, private shareService: SharedService\n    ){\n\n  }\n  ngOnInit(): void{\n    let allCities;\n    // api call to get cities.\n    this.apiUrl = this.appConstants.api + 'find?lat=' + this.lat + '&' + 'lon=' + this.lang + '&cnt=' + this.count + '&appid=' + this.appConstants.apikey;\n    this.weatherService.getEuropeanCountries(this.apiUrl).subscribe( (result) =>{\n      console.log(\"logo\");\n       allCities = result;\n      console.log(this.cities);\n      allCities.list.forEach(c => {\n        //api call to get city data \n        let cityApi = this.appConstants.api + 'weather?id=' + c.id  + '&appid=' + this.appConstants.apikey;\n         this.weatherService.getCityDataById(cityApi).subscribe((data) =>\n         {\n          let newCity = new City();\n          newCity.name = data['name'];\n          newCity.temp = +(data['main'].temp - 273.15).toFixed(2);\n       newCity.sunrise = new Date(data['sys'].sunrise * 1000).toJSON().split(\"T\")[1].split(\".\")[0];\n       newCity.sunset = new Date(data['sys'].sunset * 1000).toJSON().split(\"T\")[1].split(\".\")[0];\n          newCity.sealevel= data['main'].sea_level;\n          newCity.id = data['id'];\n          this.cityList.push(newCity);\n         })\n\n      });\n    });\n  }\n\n \n  // redirect(item: City){\n  //   this.shareService.updateSelectedCity(item);\n  //   this._router.navigate(['weatherDetails']);\n\n  // }\n}\n","<div class=\"col-md-12 col-sm-12 col-xs-12\">\n    <div class=\"row\">\n      <div class=\"col-3\" *ngFor=\"let item of cityList; let i=index\" >\n          <a #customButton [routerLink]=\"['/weatherDetails',item.id]\" class=\"btn btn-outline-primary waves-effect\" \n              [ngStyle]=\"{'width': '100%', 'margin-left': '5px', 'margin-top': '15px'}\">\n              <div class=\"form-template-list-view\">\n                 \n                  <span class=\"h5 ml-5 d-block\">Name : {{item.name}}</span>\n                  <span class=\"h5 ml-5 d-block\">Temparature: {{item.temp}}(°C)</span>\n                  <span class=\"h5 ml-5 d-block\">Sunrise: {{item.sunrise  | luxonFormat:' HH:mm a'}} </span>\n                  <span class=\"h5 ml-5 d-block\">Sunset: {{item.sunset  | luxonFormat:'HH:mm a' }} </span>\n  \n              </div>\n            </a>\n      </div>\n  </div>\n  </div>\n  \n  ","import { Component, OnInit } from '@angular/core';\nimport {SharedService} from '../../shared/shared-service';\nimport {WeatherServiceService} from '../../shared/weather-service.service';\nimport {AppConstants} from '../../app.constant';\nimport { ActivatedRoute } from '@angular/router';\nimport {City} from '../../shared/city';\n\n@Component({\n  selector: 'app-weatherdetails',\n  templateUrl: './weatherdetails.component.html',\n  styleUrls: ['./weatherdetails.component.scss']\n})\nexport class WeatherdetailsComponent implements OnInit {\n\n  constructor(private _sharedService: SharedService, private weatherService: WeatherServiceService, private appConst: AppConstants,private _Activatedroute:ActivatedRoute) { }\n   forecatsAtnine: Array<City> = [];\n\n  ngOnInit(): void {\n    let id=this._Activatedroute.snapshot.paramMap.get(\"id\");\n      // api to get city forecatdata\n      let api = this.appConst.api + 'forecast?id=' + id + '&appid=' + this.appConst.apikey; \n      this.weatherService.getForecastForCity(api).subscribe((result) => {\n        let cityName = result['city'].name;\n          result['list'].forEach(element => {\n            if(element.dt_txt !+ null && element.dt_txt.includes('09:00:00')){\n              let newCity = new City();\n              newCity.temp = +(element['main'].temp - 273.15).toFixed(2);\n              newCity.sealevel= +(element['main'].sea_level * 67.20).toFixed(2);\n              newCity.name = cityName;\n              newCity.date = new Date(element.dt_txt).toLocaleString(\"en-US\")\n               this.forecatsAtnine.push(newCity);\n            }\n          });\n      });\n    \n  }\n\n}\n","\n\n\n<table class=\"table\">\n    <thead>\n      <tr>\n          <th>#</th>\n        <th scope=\"col\">City Name</th>\n        <th scope=\"col\">Date</th>\n        <th scope=\"col\">Temparature</th>\n        <th scope=\"col\">Sea Level (Ft)</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let item of forecatsAtnine; let i = index\">\n        <th scope=\"row\">{{i +1}}</th>\n        <td>{{item.name}}</td>\n        <td>{{item.date}}</td>\n        <td>{{item.temp}}</td>\n        <td>{{item.sealevel}}</td>\n\n      </tr>\n     \n    </tbody>\n  </table>\n","export class City\r\n{\r\n  name: string; \r\n  temp: number;\r\n  sunrise: string;\r\n  sunset: string;\r\n  sealevel: number;\r\n  id: number;\r\n  date: string;\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DateTime } from 'luxon';\r\n\r\n@Pipe({ name: 'luxonFormat' })\r\nexport class LuxonFormatPipe implements PipeTransform {\r\n\r\n    transform(value: DateTime, format: string) {\r\n        if (!value) {\r\n            return '';\r\n        }\r\n\r\n        return value.toLocaleString(DateTime.DATETIME_SHORT);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, from } from 'rxjs';\r\nimport {City}  from './city';\r\n@Injectable()\r\nexport class SharedService {\r\n    selectedCity: City;\r\n    _selectedCity = new BehaviorSubject<City>(new City);\r\n    constructor(){\r\n        this._selectedCity.next(this.selectedCity);\r\n\r\n    }\r\n\r\n    updateSelectedCity(city: City) {\r\n\r\n        this.selectedCity = city;\r\n        this._selectedCity.next(this.selectedCity);\r\n\r\n}\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherServiceService {\n  private _serverError(err: any) {\n    return throwError(err || 'backend server error');\n  }\n  constructor(private _http: HttpClient) { }\n\n  getEuropeanCountries(api: string){\n    return this._http.get(api)\n    .pipe(map(response => response), catchError(this._serverError));\n  }\n\n  getCityDataById(api: string){\n    return this._http.get(api)\n    .pipe(map(response => response), catchError(this._serverError));\n  }\n  getForecastForCity(api: string){\n    return this._http.get(api)\n    .pipe(map(response => response), catchError(this._serverError));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}